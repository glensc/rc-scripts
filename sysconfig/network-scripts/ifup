#!/bin/sh
#
#	$Id: ifup,v 1.16 1999/07/13 12:49:37 misiek Exp $
#
PATH=/sbin:/usr/sbin:/bin:/usr/bin

cd /etc/sysconfig/network-scripts
. /etc/sysconfig/network
. /etc/rc.d/init.d/functions.network

need_hostname

CONFIG=$1

[ -z "$CONFIG" ] && {
    echo "usage: ifup <device name>" >&2
    exit 1
}

[ -f "/etc/sysconfig/interfaces/$CONFIG" ] || CONFIG=ifcfg-$CONFIG
[ -f "/etc/sysconfig/interfaces/$CONFIG" ] || {
    echo "usage: ifup <device name>" >&2
    exit 1
}

if [ `id -u` != 0 ]; then
    if [ -x /usr/sbin/usernetctl ]; then
	exec /usr/sbin/usernetctl $CONFIG up
    fi
    echo "Users cannot control this device." >&2
    exit 1
fi

source_config

if [ "foo$2" == "fooboot" -a "${ONBOOT}" == "no" ]; then
    exit
fi

IPSETUP=no

# pelna nazwa dewajsa jaka podal user
FULLDEVNAME="$DEVICE"
# przyjmuje warto¶æ np: "dummy" czy "eth" itd. (do poprawki - teraz przyjmuje "dummy0:")
DEVICETYPE=`echo $FULLDEVNAME | sed "s/[0-9]*$//"`
# przyjmuje eth0 przy {eth0,eth0:1,eth0:alias}
DEVICE=`echo $FULLDEVNAME | sed 's/:.*//g'`

if echo $FULLDEVNAME | grep -q ':' ; then
    ISALIAS=yes
else
    ISALIAS=no
fi

# Old BOOTP variable
if [ "$BOOTP" == "yes" ]; then
    BOOTPROTO=bootp
fi

if [ "$BOOTPROTO" = bootp -o "$BOOTPROTO" == "dhcp" ]; then
    PUMP=true
fi

if [ -z "$PREFIX" ] && [ -n "$NETMASK" ]; then
    PREFIX="`calcprefix $NETMASK`"
fi

if [ -z "$NETMASK" ] && [ -n "$PREFIX" ]; then
    NETMASK="`calcnetmask $PREFIX`"
fi

[ "$MULTICAST" == "yes" ] && MULTICAST=on               || MULTICAST=off
[ -z "$ARP" ]		  && ARP=yes
[ "$ARP" == "yes" ]       && ARP=on                     || ARP=off
[ -n "$SRC_ADDR" ]        && SRC_ADDR="src ${SRC_ADDR}" || SRC_ADDR=""
[ -z "$PROTOCOL" ]        && PROTOCOL=ip

OTHERSCRIPT="/etc/sysconfig/network-scripts/ifup-${DEVICETYPE}"

if [ -x "$OTHERSCRIPT" ]; then
    exec $OTHERSCRIPT $CONFIG $2
fi

# is this device available? (this catches PCMCIA devices for us)
/sbin/ifconfig ${DEVICE} 2>&1 | grep -s "not found" > /dev/null
if [ "$?" == "0" ]; then
    echo "Delaying ${FULLDEVNAME} initialization."
    exit 0
fi

if [ "$SLAVE" == "yes" -a "$ISALIAS" == "no" -a "$MASTER" != "" -a -x /sbin/ifenslave ]; then
    RFLAG="" ; [ "${RECIEVE-ONLY}" == "yes" ] && RFLAG="-r"

    ip link set ${DEVICE} down
    echo "Enslaving $DEVICE to $MASTER"
    ifenslave $RFLAG "$MASTER" "$DEVICE"

    exit 0
fi

if [ -n "$MACADDR" ]; then
   ip link set ${DEVICE} address ${MACADDR}
fi

if [ -n "$PUMP" ] && [ "$ISALIAS" == "no" ]; then

    echo -n "Determining IP information for $DEVICEFULLNAME..."
    if /sbin/pump -i $DEVICEFULLNAME ; then
       echo " done."
    else
       echo " failed."
       exit 1
    fi

else

    if [ -z "$PREFIX" ]; then
	eval `/bin/ipcalc --prefix ${IPADDR}`
    fi

    if [ -z "$BROADCAST" ]; then
	eval `/bin/ipcalc --broadcast ${IPADDR} ${NETMASK}`
    fi

    if [ -z "$NETWORK" ]; then
	eval `/bin/ipcalc --network ${IPADDR} ${NETMASK}`
    fi

    ip link set ${DEVICE} multicast ${MULTICAST} arp ${ARP} up
    ip addr add ${IPADDR}/${PREFIX} broadcast ${BROADCAST} dev ${DEVICE} label ${FULLDEVNAME}


# IPv6 rules
    if [ "${IPV6_NETWORKING}" == "yes" ] ; then 
      for ADDR in ${IPV6_ADDR} ; do
	   ip addr add ${ADDR} dev ${DEVICE} label ${FULLDEVNAME}
	   ip route add ${ADDR} dev ${DEVICE}
      done  
    fi

# hack for 2.2 kernels
# uiprouciæ
    if [ "$ISALIAS" == "no" ] && [ -z "`route -n | sed "s/ .*//" | grep ${NETWORK}`" ]; then
	ip route add ${NETWORK}/${PREFIX} dev ${DEVICE} ${SRC_ADDR}
    else
	ip route add ${IPADDR}/32 dev ${DEVICE} ${SRC_ADDR}
    fi

    . /etc/sysconfig/network

    if [ "${GATEWAY}" != "" ]; then
	if [ "${GATEWAYDEV}" = "" -o "${GATEWAYDEV}" = "${DEVICE}" ]; then
	    # set up default gateway
	    ip route add default via ${GATEWAY} dev ${DEVICE} ${SRC_ADDR}
	    DEFGW=${GATEWAY}
	fi
    fi

    if [ "$BOOTPROTO" = bootp -a "$ISALIAS" = no ]; then
	if [ -n "$GATEWAYS" ]; then
	    for gw in $GATEWAYS; do
		if [ "$gw" != "${DEFGW}" ]; then
		    ip route add default via $gw dev ${DEVICE} ${SRC_ADDR}
		fi
	    done
	fi

	if [ -n "$DNSSRVS" -a -n "$SEARCH" ]; then
	    echo "search $SEARCH" > /etc/resolv.conf
	    for dns in $DNSSRVS; do
		    echo "nameserver $dns" >> /etc/resolv.conf
	    done
	fi

	if [ -n "$BOOTPHOSTNAME" -a -n "$NEEDHOSTNAME" ]; then
	    set_hostname $BOOTPHOSTNAME
	fi
    fi
fi

if [ "$IPX" = yes ]; then
	/etc/sysconfig/network-scripts/ifup-ipx $DEVICE
fi

exec /etc/sysconfig/network-scripts/ifup-post $CONFIG
