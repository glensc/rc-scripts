#!/bin/sh
#
#	$Id: ifup-ppp,v 1.20 2002/07/13 16:25:08 misiek Exp $
#
# ifup-ppp script for pppd-2.3.5 (with persist & demand options) ver 0.2
# Grzegorz Stanislawski <stangrze@open.net.pl>
# Features:
#  - since persist option is included to pppd it''s no need to do werid loops
#    ifup-ppp script. This also makes your logfile grow slower when Your link
#    is down.
#  - chat-ppp? file with script for chat is now parsed by shell, so You can
#    include in it shell variables (for example $PHONE, $USERNAME)
#    You can define any variable in ifcfg-ppp? file and use it in chat-ppp?
#    You only have to add it's name into DATAFORCHAT variable
#    Note, that chat-ppp file is now parsed by shell, so you have to escape
#    with "\" all shell special characters like \$;:)(& etc.

PATH=/sbin:/usr/sbin:/bin:/usr/bin

# ifup-post for PPP is handled through /etc/ppp/ip-up

. /etc/sysconfig/network
. /etc/rc.d/init.d/functions
. /etc/sysconfig/network-scripts/functions.network

CONFIG=$1
source_config
# set all major variables
setup_ip_param

if [ "$2" = "boot" ] && is_no "${ONBOOT}"; then
  exit
fi
if [ ! -x /usr/sbin/pppd ]; then
  nls "/usr/sbin/pppd does not exist or is not executable"
  nls "ifup-ppp for %s exiting" "$DEVICE"
    logger -p daemon.info -t ifup-ppp \
    "$(nls '/usr/sbin/pppd does not exist or is not executable for %s' "$DEVICE")"
  exit 1
fi

# modprobe ppp in case of kernel with devfs
# (/dev/ppp is missing and ppp fails without this) --misiek
[ -c /dev/.devfsd ] && modprobe -s -k char-major-108

opts="lock"

if [ -z "${REPORTFILE}"  ] ; then
    REPORTFILE=/dev/null
fi

if is_no "${DIRECT_CONNECT}" || [ -z "${DIRECT_CONNECT}" ]; then
    
    PEERCONF=/etc/ppp/peers/${DEVNAME}
    
    if [ ! -f ${PEERCONF} ]; then
	if [ -z "${WVDIALSECT}" ]; then
	    # XXX: REPORTFILE support is problematic here --misiek
	    [ -f "${CHATSCRIPT}" ] || CHATSCRIPT=/etc/sysconfig/interfaces/data/chat-${PARENTDEVNAME}
	    if [ ! -f "${CHATSCRIPT}" ]; then
		nls '/etc/sysconfig/network-scripts/chat-%s does not exist' "${DEVNAME}"
		nls 'ifup-ppp for %s exiting' "${DEVNAME}"
		logger -p daemon.info -t ifup-ppp \
		"$(nls '/etc/sysconfig/network-scripts/chat-%s does not exist for %s' "${DEVNAME}" "${DEVICE}")"
		exit 1
	    fi
	fi
	logger -s -p daemon.notice -t ifup-ppp "$(nls 'Setting up a new %s config file' "${PEERCONF}")"
	if [ -f /etc/ppp/peers/${DEVICE} ]; then
	    cp -f /etc/ppp/peers/${DEVICE} ${PEERCONF}
	else
	    touch ${PEERCONF}
	fi
	if [ "${WVDIALSECT}" ]; then
	    echo "connect \"/usr/bin/wvdial --chat ${WVDIALSECT} >> ${REPORTFILE} 2>&1 \"" >> ${PEERCONF}
	else
	    if is_yes "${DEBUG}"; then
		chatdbg="-v"
	    fi
	    echo "connect \"/usr/sbin/chat $chatdbg -f ${CHATSCRIPT} -r ${REPORTFILE} ${chatdbg}\"" >> ${PEERCONF}
	fi
    fi

    opts="$opts call ${DEVNAME}"
fi

if [ -z "$HOLDOFF" ]; then
  HOLDOFF=30
fi
if is_yes "${PERSIST}"; then
  if [ -z "${MAXFAIL}" ]; then 
  MAXFAIL="0"
  fi
  opts="$opts persist holdoff $HOLDOFF maxfail $MAXFAIL"
fi
if is_yes "${DEMAND}"; then
  if [ -z "${IDLE}" ]; then
  IDLE="0"
  fi
  opts="$opts demand ktune idle ${IDLE}"
fi
if ! is_no "${HARDFLOWCTL}"; then
  opts="$opts crtscts"
fi
if is_yes "${MODEMCTL}"; then
    opts="$opts modem"
fi
if is_yes "${ESCAPECHARS}"; then
  opts="$opts asyncmap FFFFFFFF"
else
  opts="$opts asyncmap 00000000"
fi
if ! is_no "${DEFROUTE}"; then
  # pppd will no longer delete an existing default route
  # so we have to help it out a little here.
  ip route del 0/0 > /dev/null 2>&1
  opts="$opts defaultroute"
fi
if ! is_no "${PEERDNS}"; then
  opts="$opts usepeerdns"
fi
if [ -n "${MRU}" ] ; then
  opts="$opts mru ${MRU}"
fi
if [ -n "${MTU}" ] ; then
  opts="$opts mtu ${MTU}"
fi
if is_yes "$IPV4_NETWORKING" && [ -n "${IP4ADDR}${REMIP}" ] ; then
  # if either IP address is set, the following will work.
  opts="$opts ${IP4ADDR}:${REMIP}"
fi
if is_yes "$IPV6_NETWORKING"; then
 if is_yes "$IPV6_PPP"; then
	if [ -n "${IP6ADDR}${REMIP6}" ] ; then
	  opts="$opts ipv6 ${IP6ADDR},${REMIP6}"
	elif is_yes "$IPV6_CP_USEV4"; then
	  opts="$opts ipv6cp-use-ipaddr"
	elif is_yes "$IPV6_CP_PERSISTENT"; then
	  opts="$opts ipv6cp-use-persistent"
	fi
 elif is_no "$IPV6_PPP"; then
    opts="$opts noipv6"
 fi
elif is_no "$IPV6_NETWORKING"; then
    opts="$opts noipv6"
fi
if is_yes "${IPX_PPP}"; then
    opts="$opts ipx"
    if [ -n "${IPX_PPP_NETWORK}" ]; then
	opts="$opts ipx-network ${IPX_PPP_NETWORK}"
    fi
    if [ -n "${IPX_PPP_NODE}" ]; then
	opts="$opts ipx-node ${IPX_PPP_NODE}"
    fi
    if [ -n "${IPX_PPP_ROUTING}" ]; then
	opts="$opts ipx-routing ${IPX_PPP_ROUTING}"
    fi
fi
if [ -n "${PAPNAME}" ] ; then
  opts="$opts user ${PAPNAME}"
fi
if [ -n "${REMOTENAME}" ] ; then
  opts="$opts remotename ${REMOTENAME}"
fi
if is_yes "${DEBUG}"; then
  opts="$opts debug"
fi
if is_yes "${AUTH}"; then
  opts="$opts auth"
elif is_no "${AUTH}"; then
  opts="$opts noauth"
fi

(logger -p daemon.info -t ifup-ppp \
    $(nls 'pppd started for %s on %s at %s' "$DEVICE" "$MODEMPORT" "$LINESPEED") &)&

/usr/sbin/pppd $opts ${MODEMPORT} ${LINESPEED} \
	ipparam ${DEVNAME} linkname ${DEVNAME} \
	${PPPOPTIONS}
	
# This must be last line !
# vi:syntax=sh:tw=78:ts=8:sw=4

