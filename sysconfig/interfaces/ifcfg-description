#	$Id: ifcfg-description,v 1.10.2.2 2000/10/22 00:54:44 misiek Exp $
DEVICE=<name>
[ BOOTMETHOD={none|bootp|dhcp|pump} ]
  You can specify which dhcp client to use with the DHCP_CLIENT, if
  the DHCP_CLIENT is not specified we trying to launch in order :
  /sbin/dhcpcd
  /sbin/dhclient
  /sbin/dhcpxd
  /sbin/pump
  if you have a preferred client define the DHCP_CLIENT variable.
  You can also pass some options to dhcl client via DHCP_OPTIONS.

[ BOOTMETHOD6={none|dhcp6|v4compat}
  dhcp6 method isn't supported, yet.
  v4compat uses available IPv4 addresses (ie. from DHCPv4)
  and then convert them to IPv6 (IPv4-compatible) to use with
  automatic tunnels


IP_1_ADDR="(IPv4 or IPv6 address)/prefix"
IP_1_AOPTS="broadcast xxx etc" (by default broadcast is autocalculated)
IP_1_ROPTS=""

IP_2_ADDR=
IP_2_AOPTS= options for ip addr add
IP_2_ROPTS= options for ip route add (currently used only for IP4_PRIM_NR)

IP4_PRIM_NR="2"		# number X of primary IPv4 interface (IP_X_ADDR)
IP4_SRC_NR="2"		# number X of IPv4 address for ip's ,,src'' parameter
IP6_PRIM_NR=""		# 
IP6_SRC_NR=""		# 

[ ONBOOT={no|yes} ]
[ MULTICAST={|no|yes} ]	- for eth automamaticly set to yes
[ ARP={no|yes} ]	- for eth automamaticly set to yes
[ IPV6_DISABLE_AUTOCONF={yes|no} ] - disable IPv6 autoconfiguration

[ IPX=yes|no ]
if	IPX=yes ; then

	IPXNETNUM_{802_2,802_2TR,802_3,EtherII,SNAP}
	IPXPRIMARY_{802_2,802_2TR,802_3,EtherII,SNAP}=yes|no
	IPXACTIVE_{802_2,802_2TR,802_3,EtherII,SNAP}=yes|no
fi

[ MTU= ]
[ METRIC= ]

[ QDISC= ]

[ DEFAULTHANDLING=yes|no ] (used in configuration for ATM interfaces,
			    obsolete variable)
[ HANDLING=0|1|2|3 ] (0 is default; used ie. in ATM configuration, for
		      details see ifup script)

if 	DEVICE=eth* ; then

	[ MEDIA={auto|10baseT|10base2|AUI} ]
	[ MAC=<hw addres> ]
	
elif	DEVICE=ppp* || DEVICE=sl* ; then
	
	PERSIST=yes|no
	MODEMPORT=<device, say /dev/modem>
	LINESPEED=<speed, say 115200>
	DEFABORT=yes|no 
	
	if	DEVICE=ppp* ; then
	
		AUTH=yes|no
		PEERDNS=yes|no
		DEFROUTE=yes|no
		ESCAPECHARS=yes|no
	  	HARDFLOWCTL=yes|no (yes imples "modem crtscts" options)
    	 	PPPOPTIONS=<arbitrary option string>
		PAPNAME=<"name $PAPNAME" on pppd command line>
		REMIP=<remote ip4 address, normally unspecified>
		REMIP6=<remote ip6 address, normally unspecified>
    		MRU=
    		DISCONNECTTIMEOUT=<number of seconds, default currently 5>
    		RETRYTIMEOUT=<number of seconds, default currently 60>
    		INITSCRIPT=<modem command>
    		DATAFORCHAT=<list of variables>
    		<anything>=<anything> (for chat script)
		IPV6_PPP=yes|no (use IPv6 for ppp ?)
		if IPV6_PPP = yes ; then
			IPV6_CP_USEV4=yes|no (use local IPv4 mapped addresses
					      as IPv6 addresses)
			IPV6_CP_PERSISTENT=yes|no (use EUI-48 addresses
						   as IPv6 addresses)
			or by default use address specified by IP6_PRIM_NR
			and REMIP6
		fi
	fi

	if	DEVICE=sl* ; then	(SLIP)
		DIRECT_CONNECT=yes|no (dirrect connection via slattach ?)
		PROTOCOL=slip|cslip|adaptive
		REMIP=<remote ip4 address>
		REMIP6=<remote ip6 address, normally unspecified>
	fi

elif	DEVICE=br* ; then	/* Bridge */

	BRIDGE_DEVS=<list of devices betwen which do bridging>
		    Note: separation configuration for devices in this list
		          should be avoided !
	AGEING=<ethernet (MAC) address ageing time in seconds>
	GCINT=<garbage collection interval time for the bridge in seconds>

	SPANNING_TREE=yes|no (enable SPT - Spanning Tree Protocol)
	if	SPANNING_TREE=yes ; then
			BRIDGEPRIO=<bridge's priority; 0-65535; less == better>
			FD=<bridge forward delay time in seconds>
			HELLO=<bridge hello time in seconds>
			MAXAGE=<maximum message age in seconds>
			PATHCOST_PORT=<port number>
			PATHCOST=<cost of the port specified in PATHCOST_PORT>
				Note: both PATHCOST_PORT and PATHCOST must be
				      specified to set cost of port
			PORTPRIO_PORT=<port>
			PORTPRIO=<port priority used by port selection algorithms;
			          a number between 0 and 255>
				Note: see note above
	fi
	
elif	DEVICE=lec* ; then	/* ATM LAME  */

	VLAN_NAME=
	VLAN_FORESWITCH_NAME="$HOSTNAME-$VLAN_NAME"
	
elif	DEVICE=atm* ; then	/* ATM CLIP */

	ARPSRV_ATMADDR=switch-qaa0        # ATM address of ATMARP server; omit if local
	ARPSRV_IPADDR=192.168.0.10        # IP address of ATMARP server
	# ARPSRVQOS="ubr:max_pcr=100kbps" # QOS of the ATMARP server VC
	# ARPDEFQOS="ubr:max_pcr=700kbps" # default QOS for IP over ATM VCs
	
fi

