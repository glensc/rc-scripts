#!/bin/sh
#
# /etc/rc.d/rc.sysinit - run once at boot time
# $Id$
#
# Taken in part from Miquel van Smoorenburg's bcheckrc.
# Changes:	Arkadiusz Mi¶kiewicz <misiek@pld-linux.org>
#

# Set the path
PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH

# Read functions
. /etc/rc.d/init.d/functions

# NLS
if [ -r /etc/sysconfig/i18n ]; then
	. /etc/sysconfig/i18n
	[ -n "$LANG" ] && export LANG || unset LANG
	[ -n "$LC_CTYPE" ] && export LC_CTYPE || unset LC_CTYPE
	[ -n "$LC_COLLATE" ] && export LC_COLLATE || unset LC_COLLATE
	[ -n "$LC_MESSAGES" ] && export LC_MESSAGES || unset LC_MESSAGES
	[ -n "$LC_NUMERIC" ] && export LC_NUMERIC || unset LC_NUMERIC
	[ -n "$LC_MONETARY" ] && export LC_MONETARY || unset LC_MONETARY
	[ -n "$LC_TIME" ] && export LC_TIME || unset LC_TIME
	[ -n "$LC_ALL" ] && export LC_ALL || unset LC_ALL
	[ -n "$LANGUAGE" ] && export LANGUAGE || unset LANGUAGE
	[ -n "$LINGUAS" ] && export LINGUAS || unset LINGUAS
fi

# Read network config data
if [ -r /etc/sysconfig/network ]; then
	. /etc/sysconfig/network
else
	NETWORKING=no
	HOSTNAME=localhost
fi

# Read system config data
if [ -r /etc/sysconfig/system ]; then
	. /etc/sysconfig/system
else
	RUN_SULOGIN_ON_ERR=yes
	DELAY_LOGIN=yes
	CLEAN_TMP=no
	CONSOLE_LOGLEVEL=1
	RUN_LDCONFIG=yes
fi

# Check SELinux status
selinuxfs=$(awk '/ selinuxfs / { print $2 }' /proc/mounts)
SELINUX=
if [ -n "$selinuxfs" ] && [ "$(cat /proc/self/attr/current)" != "kernel" ]; then
        if [ -r $selinuxfs/enforce ] ; then
                SELINUX=$(cat $selinuxfs/enforce)
        else
                # assume enforcing if you can't read it
                SELINUX=1
        fi
fi

if [ -x /sbin/restorecon ] && LC_ALL=C fgrep -q " /dev " /proc/mounts ; then
        /sbin/restorecon  -R /dev 2>/dev/null
fi


# Print welcome message
nls "\t\t\t%sPowered by %sPLD Linux Distribution%s" "$(termput setaf $CPOWEREDBY)" "$(termput setaf $CPLD)" "$(termput op)"
if is_yes "$PROMPT"; then
	nls -n "\t\t  Press %sI%s to enter interactive startup" "$(termput setaf $CI)" "$(termput op)"
	echo
	sleep 1
fi

# Set console loglevel
if [ -n "$CONSOLE_LOGLEVEL" ]; then
	/bin/dmesg -n $CONSOLE_LOGLEVEL
fi

# Set the hostname
run_cmd "$(nls 'Host:') ${HOSTNAME}" hostname ${HOSTNAME}

# Set the NIS domain name
if [ -n "$NISDOMAIN" ]; then
	run_cmd "$(nls 'NIS Domain:') ${NISDOMAIN}" domainname $NISDOMAIN
else
	domainname ""
fi

# Clean up SELinux labels
if [ -n "$SELINUX" ]; then
    for file in /etc/mtab /etc/cryptomtab /etc/ld.so.cache ; do
	[ -r $file ] && restorecon $file  >/dev/null 2>&1
    done
fi
		  
# Clear mtab
:>/etc/mtab
[ -f /etc/cryptomtab ] && :>/etc/cryptomtab

# Remove stale backups
rm -f /etc/mtab~ /etc/mtab~~ /etc/cryptomtab~ /etc/cryptomtab~~

# Remove /etc/nologin when starting system
[ -f /etc/nologin.boot ] && rm -f /etc/nologin /etc/nologin.boot

if is_yes "$DELAY_LOGIN" && [ ! -f /etc/nologin ]; then
	show "Enabling Delay Login"; busy
	echo > /etc/nologin
	nls "System bootup in progress - please wait" >> /etc/nologin
	echo >> /etc/nologin
	chmod 644 /etc/nologin
	cp -fp /etc/nologin /etc/nologin.boot
	ok
fi

# The root filesystem is now read-write, so we can now log via
# syslog() directly...
if [ -n "$IN_INITLOG" ]; then
	IN_INITLOG=""
fi

[ -n "$SELINUX" ] && [ -f /.autorelabel ] && relabel_selinux

# Turn on process accounting
if [ -x /etc/rc.d/rc.acct ]; then
	/etc/rc.d/rc.acct start
fi

# Clean up /.
rm -f /fastboot /fsckoptions /forcefsck /halt /poweroff

# Clean up /var
# I'd use find, but /usr may not be mounted.
for afile in /var/lock/* /var/run/*; do
    	bafile=$(basename $afile)
	if [ -d "$afile" ]; then
		[ "$bafile" != "news" -a "$bafile" != "sudo" -a "$bafile" != "mon" ] && rm -rf $afile/*
	else
	    	[ "$bafile" != "hwprofile" ] && rm -f $afile 2> /dev/null
	fi
done
# Delete stale files
rm -f /var/lib/rpm/__db* /var/spool/postoffice/.pid.* /tmp/.X*-lock \
	/tmp/.lock.* /tmp/.gdm_socket /tmp/.s.PGSQL.*
rm -rf /tmp/.X*-unix /tmp/.ICE-unix /tmp/.font-unix /tmp/hsperfdata_* \
	/tmp/kde-* /tmp/ksocket-* /tmp/mc-* /tmp/mcop-* /tmp/orbit-*  \
	/tmp/scrollkeeper-*  /tmp/ssh-*

{
# Clean up utmp/wtmp
if ! is_no "$NEED_XFILES" ; then
	:>/var/run/utmpx
	touch /var/log/wtmpx
	chown root.utmp /var/run/utmpx /var/log/wtmpx
	chmod 0664 /var/run/utmpx /var/log/wtmpx
else
	:>/var/run/utmp
	touch /var/log/wtmp
	chown root.utmp /var/run/utmp /var/log/wtmp
	chmod 0664 /var/run/utmp /var/log/wtmp
fi

# Clean /tmp
if is_yes "$CLEAN_TMP"; then
	rm -rf /tmp/* /tmp/.[a-zA-Z0-9]*
fi

# System protected dirs
mkdir -m 1777 -p /tmp/.ICE-unix > /dev/null 2>&1
chown root:root /tmp/.ICE-unix
[ -n "$SELINUX" ] && restorecon /tmp/.ICE-unix >/dev/null 2>&1

# There could be a new kernel version. Remove old psdevtab database
rm -f /etc/psdevtab

# Now that we have all of our basic modules loaded and the kernel going,
# let's dump the syslog ring somewhere so we can find it later
dmesg -s 131072 > /var/log/dmesg
i=5
while [ $i -ge 0 ]; do
        if [ -f /var/log/dmesg.$i ]; then
            chmod 0600 /var/log/dmesg.$i
            mv -f /var/log/dmesg.$i /var/log/dmesg.$(($i+1))
        fi
        i=$(($i-1))
done
cp -f /var/log/dmesg /var/log/dmesg.0
chmod 0600 /var/log/dmesg /var/log/dmesg.0

kill -TERM $(/sbin/pidof getkey) >/dev/null 2>&1
} &
if is_yes "$PROMPT"; then
	/sbin/getkey i && touch /var/run/confirm
fi
wait
echo

# This must be last line !
# vi:syntax=sh:tw=78:ts=8:sw=4
