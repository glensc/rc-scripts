#!/bin/sh
#
# rc            This file is responsible for starting/stopping
#               services when the runlevel changes. It is also
#               responsible for the very first setup of basic
#               things, such as setting the hostname.
#
# Original Author:       
#               Miquel van Smoorenburg, <miquels@drinkel.nl.mugnet.org>
# Changes:      Arkadiusz Mi¶kiewicz <misiek@pld.org.pl>
#

# Source function library.
. /etc/rc.d/init.d/functions

# Now find out what the current and what the previous runlevel are.
argv1="$1"
set `/sbin/runlevel`
runlevel=$2
previous=$1
export runlevel previous

# if runlevel is 0 (halt) or 6 (reboot) change to first
# virtual console
if [ "$runlevel" == "0" ] || [ "$runlevel" == "6" ]; then
	exec 0<> /dev/tty1 1>&0 2>&0
	[ -x /usr/bin/chvt ] && /usr/bin/chvt 1 && echo
else
# if previous runlevel == current runlevel do nothing
	[ "$runlevel" == "$previous" ] && exit 0
fi

# set onlcr to avoid staircase effect and do not lock scrolling
stty onlcr -ixon 0>&1

# Get first argument. Set new runlevel to this argument.
[ "$1" != "" ] && runlevel="$argv1"

# Tell linuxconf what runlevel we are in
[ -d /var/run ] && echo "/etc/rc.d/rc$runlevel.d" > /var/run/runlevel.dir


# Say something ;)
echo "`tput setaf 2`Resource Manager:`tput setaf 7` Leaving  runlevel number \
.....`tput setaf 6`[`tput setaf 2` $previous `tput setaf 6`]`tput setaf 7`"
echo "`tput setaf 2`Resource Manager:`tput setaf 7` Entering runlevel number \
.....`tput setaf 6`[`tput setaf 2` $runlevel `tput setaf 6`]`tput setaf 7`"

# Is there an rc directory for this new runlevel?
if [ -d /etc/rc.d/rc$runlevel.d ]; then
	# First, run the KILL scripts.
	for i in /etc/rc.d/rc$runlevel.d/K*; do
		# Check if the script is there.
		[ ! -f $i ] && continue

		# Don't run [KS]??foo.{rpmsave,rpmorig,rpmnew} scripts
		[ "${1%.rpmsave}" != "${1}" ] && continue
		[ "${1%.rpmorig}" != "${1}" ] && continue
		[ "${1%.rpmnew}" != "${1}" ] && continue

		# Check if the subsystem is already up.
		subsys=${i#/etc/rc.d/rc$runlevel.d/K??}
		[ ! -f /var/lock/subsys/$subsys ] && \
		    [ ! -f /var/lock/subsys/${subsys}.init ] && continue

		# Bring the subsystem down.
		$i stop
	done

	# Now run the START scripts.
	for i in /etc/rc.d/rc$runlevel.d/S*; do
		# Check if the script is there.
		[ ! -f $i ] && continue

		# Don't run [KS]??foo.{rpmsave,rpmorig} scripts
		[ "${1%.rpmsave}" != "${1}" ] && continue
		[ "${1%.rpmorig}" != "${1}" ] && continue
		[ "${1%.rpmnew}" != "${1}" ] && continue

		# Check if the subsystem is already up.
		subsys=${i#/etc/rc.d/rc$runlevel.d/S??}
		[ -f /var/lock/subsys/$subsys ] || \
		    [ -f /var/lock/subsys/${subsys}.init ] && continue

		# Bring the subsystem up.
		$i start
	done
fi

# Say something ;)
echo "`tput setaf 2`Resource Manager:`tput setaf 7` Runlevel has been \
reached.....`tput setaf 6`[`tput setaf 2` $runlevel `tput setaf 6`]`tput setaf 7`"

