#!/bin/sh
#
# <service>	<service> short service description
#
# chkconfig:	345 <start_level> <stop_level>
#
# description:	<service> long service description
#
# processname:	<service>
# config:
# pidfile:
#
# $Id$

# Source function library
. /etc/rc.d/init.d/functions

# Get network config
. /etc/sysconfig/network

# Set defaults
OPTION1=""	# Strings
OPTION2="-q"	#
OPTION3=	# Values
OPTION4=5	#

# Get service config - may override defaults
[ -f /etc/sysconfig/<service> ] && . /etc/sysconfig/<service>

# Check that networking is up.
if is_yes "${NETWORKING}"; then
	if [ ! -f /var/lock/subsys/network -a "$1" != stop -a "$1" != status ]; then
		msg_network_down <service>
		exit 1
	fi
else
	exit 0
fi

start() {
	# Check if the service is already running?
	if [ -f /var/lock/subsys/<service> ]; then
		msg_already_running <service>
		return
	fi

	msg_starting <service>
	daemon /usr/sbin/<service>
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/<service>
}

stop() {
	if [ ! -f /var/lock/subsys/<service> ]; then
		msg_not_running <service>
		return
	fi

	# Stop daemons.
	msg_stopping <service>
	killproc <service>
	killproc --pidfile /var/run/<service>.pid <service> -TERM
	rm -f /var/lock/subsys/<service>
}

reload() {
	if [ ! -f /var/lock/subsys/<service> ]; then
		msg_not_running <service>
		RETVAL=7
		return
	fi

	msg_reloading <service>
	killproc <service> -HUP
	killproc --pidfile /var/run/<service>.pid <service> -HUP
	RETVAL=$?
}

condrestart() {
	if [ ! -f /var/lock/subsys/<service> ]; then
		msg_not_running <service>
		RETVAL=$1
		return
	fi

	stop
	start
}

RETVAL=0
# See how we were called.
case "$1" in
  start)
  	start
	;;
  stop)
  	stop
	;;
  restart)
	stop
	start
	;;
  try-restart)
	condrestart 0
	;;
# include force-reload here if program allows reloading without restart
# otherwise remove reload action and support force-reload as restart if running
  reload|force-reload)
  	reload
	;;
# use this one if program doesn't support reloading without restart
  force-reload)
	condrestart 7
	;;
  status)
	status <service>
	RETVAL=$?
	;;
  *)
	msg_usage "$0 {start|stop|restart|try-restart|reload|force-reload|status}"
	exit 3
esac

exit $RETVAL
