#!/bin/sh
#
# single        Script for sedding up administrative/rescue shell.
#
# chkconfig: 1 00 00
# description:	This file is executed by init when it goes into runlevel \
#               1, which is the administrative state. It kills all \
#               deamons and then puts the system into single user mode. \
#               Note that the file systems are kept mounted. \
#
# Author:       Miquel van Smoorenburg, <miquels@drinkel.nl.mugnet.org>
#               Modified for PLD Linux by Grzegorz Stanislawski
# Changes:      Arkadiusz Mi¶kiewicz <misiek@pld.org.pl>
#

# Set the path.
PATH=/sbin:/bin:/usr/sbin:/usr/bin

. /etc/rc.d/init.d/functions

case "$1" in
   stop*)
	exit 0
	;;
   start*)
# Kill all processes.
	[ "${BASH+bash}" = bash ] && enable kill

	show "Sending all processes the TERM signal "
	daemon killall5 -15
	sleep 5
	show "Sending all processes the KILL signal "
	daemon killall5 -9

	rm -f /var/lock/subsys/*

	# this looks nices
	[ -x /usr/bin/clear ] && /usr/bin/clear

# make sure modprobe is working
if [ -f /proc/sys/kernel/modprobe ]; then
   echo "/sbin/modprobe" > /proc/sys/kernel/modprobe
fi

# If they want to run something in single user mode, might as well run it...
for i in /etc/rc.d/rc1.d/S[0-9][0-9]*; do
        # Check if the script is there.
        [ ! -f $i ] && continue

       # Don't run [KS]??foo.{rpmsave,rpmorig} scripts
       [ "${i%.rpmsave}" != "${i}" ] && continue
       [ "${i%.rpmorig}" != "${i}" ] && continue
       [ "${i%.rpmnew}" != "${i}" ] && continue
       [ "$i" = "/etc/rc.d/rc1.d/S00single" ] && continue
       $i start
done

	# Now go to the single user level.
	show "Telling INIT to go to single user mode"; ok
	exec init -t1 S
	;;
esac
